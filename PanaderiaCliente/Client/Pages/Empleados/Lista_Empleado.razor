@using Panaderia.BD.Data.Entidades
@using PanaderiaCliente.Client.Servicios
@inject IHttpService http
@inject NavigationManager navigationManager
@page "/Empleados"




<html>

<style>

    body {
        font-family: Helvetica;
    }

    header h1 {
        position: absolute;
        left: 3.2px;
        top: -1%;
        font-size: 100px;
    }

    .boton-producto label {
        background-color: rgb(84, 84, 245);
        color: white;
        font-weight: bold;
        border-radius: 15px;
        padding: 20px;
        position: absolute;
        top: 860px;
        left: 1672px;
        border-color: rgb(131, 129, 129);
        border: 2px solid rgb(131, 129, 129);
        cursor: pointer;
    }


    .boton-producto input {
        position: absolute;
        top: 720px;
        left: 1640px;
        opacity: 0;
    }

    .boton-producto label:hover {
        color: coral;
    }

    header {
        display: flex;
        position: fixed;
        top: -3px;
        left: 0px;
        width: 5000px;
        background-color: RGB(93,173,226);
        height: 120px;
        padding: 0;
    }



        header .toggle-btn {
            position: absolute;
            font-size: 4rem;
            cursor: pointer;
        }

    #btn-menu {
        display: none;
    }



    .cont-menu {
        width: 100%;
        max-width: 250px;
        background: rgb(36, 34, 34);
        height: 100vh;
        position: relative;
        transition: all 500ms ease;
        visibility: hidden;
        transform: translateX(-100%);
        background-image: linear-gradient(180deg, #198754 0%, #084298 70%);
    }

    #btn-menu:checked ~ .cont-menu {
        visibility: visible;
        transform: translateX(0%);
        position: fixed;
    }


    .cont-menu nav {
        transform: translateY(15%);
    }

        .cont-menu nav a {
            display: block;
            text-decoration: none;
            padding: 30px;
            border-left: 5px solid transparent;
            transition: all 40ms ease;
            color: white;
            transition: all 2000ms transparent;
        }

            .cont-menu nav a:hover {
                border-left: 5px solid #c7c7c7;
                background: #292929;
            }


    .cont-menu label {
        position: absolute;
        right: 5px;
        top: 7px;
        color: #c7c7c7;
        font-size: 35px;
        cursor: pointer;
    }


    #banner a {
        padding: 20px;
    }

    #banner nav {
        display: flex;
        position: fixed;
        left: 891px;
        top: 59px;
        text-decoration: none;
    }


    #banner h1 {
        position: fixed;
        top: 25px;
        left: 250px;
        font-size: 50px;
        font-family: Helvetica;
        text-shadow: 5px 1.5px 10px #494949;
    }


    #banner nav :hover {
        color: dimgrey;
    }

    a {
        color: black;
        text-decoration: none;
        padding: 20px;
    }

  

    header .labels {
        position: absolute;
        top: 213%;
        left: 7%;
    }



        header .labels p {
            padding: 30px;
        }

    .cajas-texto :first-child {
        position: absolute;
        top: 252.8%;
        left: 536px;
    }

    .cajas-texto :nth-child(2) {
        position: absolute;
        top: 397px;
        left: 536px;
        resize: none;
    }

    .cajas-texto :nth-child(3) {
        resize: none;
        position: absolute;
        top: 540px;
        left: 375px;
        height: 204px;
        width: 480px;
    }

    .cajas-texto :nth-child(4) {
        position: absolute;
        top: 287.9%;
        left: 20.5%;
        height: 500px;
        width: 16%;
        resize: none;
    }

    .boton-imagen {
        position: absolute;
        top: 315px;
        left: 1348px;
        cursor: pointer;
    }

        .boton-imagen input {
            position: absolute;
            top: -270px;
            left: -185px;
            width: 50px;
            opacity: 0;
        }



        .boton-imagen label {
            background-color: orange;
            padding: 15px;
            border-radius: 25px;
            width: 80px;
            height: 40px;
            position: absolute;
            top: -22px;
            left: -151px;
            color: white;
            font-weight: bold;
            display: flex;
            justify-content: center;
            align-items: center;
            border-color: #292929;
            cursor: pointer;
            box-shadow: 1px 1px 1px 1px #292929;
        }

 


    .imagen {
        position: absolute;
        left: 279%;
        top: 5%;
        margin-right: -400%;
    }


    .nav-link {
        color: black
    }

        .nav-link:hover {
            color: #2b2b2b;
        }

</style>

<head>


    <title>Panaderia</title>

</head>

<body>


    <header>

        <label for="btn-menu" class=icon-menu>
            <div class="toggle-btn">

                <span>&#9776</span>

            </div>
        </label>

        <input type="checkbox" id="btn-menu">
        <div class="cont-menu">
            <nav>
                     <a href="/">Pagina principal</a>
                <a href="/Productos">Mis productos</a>
                   <a href="/Empleados"> Empleados</a>
              <a href="/Ventas"> Ventas</a>
            </nav>

            <label for="btn-menu" class=icon-menu>
                <div class="salir">

                    <span>&#x21d0;</span>

                </div>
            </label>
        </div>

        <section id="banner">
            <div class="palabra">
                <h1>¡Panaderia Cliente!</h1>
            </div>
          





          
        </section>


    </header>

          </body>


</html>
 






  

      
 <br />
        <br />
        <br />
        <br />
         <br />
        <br />
       
        <section id="textos">

            <div>
                <h3>Lista Empleados</h3>
            </div>

       
        </section>

        <br />
        
<a class="btn btn-primary" href="/Registrar_Empleado">registrar nuevo empleado</a>

     <br />
        <br />
<table>
    <tr>
        <th>Nombre</th>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <th>Apellido</th>
        <td></td>
         <td></td>
          <td></td>
        <th>DNI</th>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
         <th>Edad</th>
        <td></td>
        <td></td>
        <td></td>
        <th>Telefono</th>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <th>Direccion</th>
        <td></td>
        <td></td>
        <th>Fecha De Contrado</th>
        <td></td>
        <td></td>
        <td></td>
        <th>Cargo</th>
        <td></td>
        <td></td>
        <td></td>
        <th></th>
         
    </tr>
    @if (empleados==null )
    {
        <tr>Cargando......</tr>
    }
    else if (empleados.Count ==0 )
    {
        <tr>No existen datos</tr>
    }
    else
    {
         @foreach (var item in empleados )
        {
            <tr>

                <td>@item.NombreEmpleado</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>@item.ApellidoEmpleado</td>
                <td></td>
                <td></td>
                <td></td>
                <td>@item.DNIEmpleado</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>@item.EdadEmpleado</td>
                <td></td>
                <td></td>
                <td></td>
                <td>@item.TelefonoEmpleado</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>@item.DireccionEmpleado
                <td></td>
                <td></td>
                <td>@item.FechaContratoEmpleado</td>
                <td></td>
                <td></td>
                <td></td>
                <td>@item.Cargo.NombreCargo</td>
                <td></td>
                <td></td>
                <th></th>
                <td></td>
                        <td>
                    <a class="btn btn-primary"
                       href="EditarEmpleado/@item.Id">
                        Editar
                    </a>
                </td>


                  @* <td>
                    <a class="btn btn-warning"
                       @onclick="()=>Eliminar(item)">
                        Borrar
                    </a>
                </td>
                *@

            </tr>
        }   


    }
  </table>
    








  
       <br />
        <br />


         <h3>Lista Cargos</h3>


             <br />
             <a class="btn btn-primary" href="/Registrar_Cargo">registrar nuevo cargo</a>
        <br />
         <br />

  <table>
               <tr>
        <th>Id</th>
        <td></td>
        <td></td>
        <td></td>
        <th>Nombre Cargo</th>
        <td></td>
       <td></td>
    </tr>



      @if ( cargos==null)
    {
        <tr>Cargando......</tr>
    }
    else if ( cargos.Count ==0)
    {
        <tr>No existen datos</tr>
    }
    else
    {

         @foreach(var item in cargos)
         { <tr>
                <td>@item.Id</td>
                <td></td>    
                <td></td>
                <td></td>
                <td>@item.NombreCargo</td>
                <td></td>
                 <td></td>
                <td>
                    <a class="btn btn-primary"
                       href="EditarCargo/@item.Id">
                        Editar
                    </a>
                </td>
           </tr>
         }
      }

      </table>


       <br />
        <br />


         <h3>Lista Encargados</h3>


             <br />
             <a class="btn btn-primary" href="/Registrar_Encargado">registrar nuevo encargado</a>
        <br />
         <br />

  <table>
               <tr>
        <th>Nombre Encargado</th>
        <td></td>
        <td></td>
        <td></td>
        <th>Apellido</th>
        <td></td>
        <td></td>
        <td></td>
        <th>DNI</th>
        <td></td>
        <td></td>
        <td></td>
         <td></td>
        <th>Edad</th>
        <td></td>
        <td></td>
         <td></td>
        <th>Puesto</th>
        <td></td>
        <td></td>
        <th> Telefono</th>
        <td></td>
        <td></td>
        <th>  Direccion</th>
        <td></td>
        <td></td>
        <th> Fecha Inicio</th>
        <td></td>
        <td></td>
        <td></td>
    </tr>



      @if ( encargados==null)
    {
        <tr>Cargando......</tr>
    }
    else if ( encargados.Count ==0)
    {
        <tr>No existen datos</tr>
    }
    else
    {

         @foreach(var item in encargados)
         { <tr>
                <td>@item.NombreEncargado</td>
                <td></td>    
                <td></td>
                <td></td>
                <td>@item.ApellidoEncargado</td>
                <td></td>
                <td></td>    
                <td></td>
                <td>@item.DNIEncargado</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>@item.EdadEncargado
                <td></td>
                <td></td>
                <td></td>@item.PuestoCargoEncargado
                <td></td>
                <td></td>
                <td>@item.TelefonoEncargado</td>
                <td></td>
                <td></td>@item.DireccionEncargado
                <td></td>
                <td></td>@item.FechaInicioEncargado
                <td></td>
                <td></td>
                <td></td>
                         <td>
                    <a class="btn btn-primary"
                       href="EditarEncargado/@item.Id">
                        Editar
                    </a>
                </td>
           </tr>
         }
      }

      </table>
       <br />




@code {
    List<Empleado> empleados;
    List<Cargo> cargos;
    List<Encargado> encargados;
     List<Proveedor> proveedores;



    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        await Leer();
        await Leer1();
         await Leer2();
    }

    private async Task Leer()

    {

        var respuesta = await http.Get<List<Empleado>>("api/Empleados");
        
        if (!respuesta.Error)
        {
            empleados = respuesta.Respuesta;
        }

    }

     private async Task Leer1()

       {

        var respuesta = await http.Get<List<Encargado>>("api/Encargados");
        
        if (!respuesta.Error)
       {
          encargados = respuesta.Respuesta;
        }

     }

       private async Task Leer2()

       {

        var respuesta = await http.Get<List<Cargo>>("api/Cargos");
        
        if (!respuesta.Error)
       {
          cargos = respuesta.Respuesta;
        }

     }


}
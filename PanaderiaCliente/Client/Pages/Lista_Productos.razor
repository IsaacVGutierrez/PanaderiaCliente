@using Panaderia.BD.Data.Entidades
@using PanaderiaCliente.Client.Servicios
@inject IHttpService http
@page "/Productos"


<a class="btn btn-primary" href="/Registrar_Producto">registrar nuevo producto</a>


<table>
    <tr>
        <th>Nombre</th>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <th>  Precio</th>
        <td></td>
         <td></td>
          <td></td>
        <td></td>
        <th>  Codigo</th>
        <td></td>
        <td></td>
        <td></td>
         <th>  Vencimiento</th>
        <td></td>
        <td></td>
         <th>  Cantidad</th>
        <td></td>
        <td></td>
        <th>  Proveedor</th>
         <td></td>
        <td></td>
        <td></td>
         <th></th>
         
    </tr>
    @if (productos==null )
    {
        <tr>Cargando......</tr>
    }
    else if (productos.Count ==0 )
    {
        <tr>No existen datos</tr>
    }
    else
    {
         @foreach (var item in productos )
        {
            <tr>

                <td>@item.NombreProduc</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>@item.PrecioProduc</td>
                <td></td>
                <td></td>
                <td>@item.CodigoProduc</td>
                <td></td>
                <td></td>
                  <td></td>
                    <td>@item.FechaVencimientoProduc</td>
                    <td></td>
                  <td></td>
                   <td>@item.CantidadProduc</td>
                <td></td>
                <td></td>@item.Proveedor.NombreProved
                <td></td>
                <td></td>
             <td></td>
        <td></td>
         <th></th>
           <td></td>
                <td></td>
                <td>
                    <a class="btn btn-primary"
                       href="Editar/@item.Id">
                        Editar
                    </a>
                </td>


                  @* <td>
                    <a class="btn btn-warning"
                       @onclick="()=>Eliminar(item)">
                        Borrar
                    </a>
                </td>
                *@

            </tr>
        }   


    }
  </table>
    


  <table>
               <tr>
       <td></td>
        <td></td>
        <td></td>
        <th>  Encargado</th>
        <td></td>
        <td></td>
        <td></td>
         <td></td>
        <td></td>
        <td></td>
        <th>  Fecha de entrega</th>
         <td></td>
        <td></td>
        <td></td>
         <th>  Proveedor</th>
         <td></td>
        <td></td>
        <td></td>
         <th>  DNI</th>
         <td></td>
        <td></td>
        <td></td>
         <th>  Telefono</th>
         <td></td>
        <td></td>
        <td></td>
    </tr>



      @if ( proveedores==null)
    {
        <tr>Cargando......</tr>
    }
    else if ( proveedores.Count ==0)
    {
        <tr>No existen datos</tr>
    }
    else
    {

         @foreach(var item in proveedores)
         { <tr>
                <td>@item.Encargado.NombreEncargado</td>
                <td></td>    
                <td></td>
                <td>@item.FechaEntregaProved</td>
                <td></td>
                <td></td>    
                <td>@item.NombreProved</td>
                <td></td>
                <td></td>
                <td></td>@item.DNIProved
                <td></td>
                <td></td>
                 <td></td>
                   <td></td>@item.TelefonoProved
                 <td></td>
                  <td></td>
        <td></td>
           </tr>
         }
      }

      </table>
      


@code {
    List<Producto> productos;
    List<Proveedor> proveedores;
    List<Encargado> Encargados;



    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        await Leer();
        await Leer1();
    }

    private async Task Leer()

    {

        var respuesta = await http.Get<List<Producto>>("api/Productos");
        
        if (!respuesta.Error)
        {
            productos = respuesta.Respuesta;
        }

    }

     private async Task Leer1()

       {

        var respuesta = await http.Get<List<Proveedor>>("api/Proveedores");
        
        if (!respuesta.Error)
       {
          proveedores = respuesta.Respuesta;
        }

     }




}
